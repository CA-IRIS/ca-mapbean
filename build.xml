<?xml version="1.0"?>

<!-- ================================================== -->
<!-- MapBean build file 	                        -->
<!-- ================================================== -->
<project name="MapBean" default="jar" basedir=".">

	<property file="project.properties"/>
	<property file="${user.home}/.ant.properties"/>

	<property name="images.dir" value="images" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="build.lib" value="${build.dir}/lib" />
	<property name="build.classes" value="${build.dir}/classes" />
	<property name="build.javadocs" value="${build.dir}/javadocs" />
	<property name="dist.dir" value="${name}-${version}" />
	<property name="manifest" value="etc/MANIFEST.MF" />
	<property name="build.compiler" value="modern" />

	<!-- =============================================== -->
	<!-- Prepare the build directory                     -->
	<!-- =============================================== -->
	<target name="prepare"
		description="Prepare the build directory for this project.">
		<copy todir="${build.classes}/images">
			<fileset dir="${images.dir}" />
		</copy>
	</target>

	<!-- ================================================ -->
	<!-- Compile the source code                          -->
	<!-- ================================================ -->
	<target name="compile"
		depends="prepare"
	        description="Compile all of the source code for this project.">
		<javac srcdir="${src.dir}"
		       destdir="${build.classes}"
		       debug="${debug}"
		       deprecation="on"
		       source="1.5"
		       target="1.5">
		</javac>
	</target>

	<!-- ================================================= -->
	<!-- Create the jar archive                            -->
	<!-- ================================================= -->
	<target name="jar"
		depends="compile"
		description="Creates the jar file for this project.">
		<mkdir dir="${build.lib}"/>
		<jar jarfile="${build.lib}/${name}-${version}.jar"
		     manifest="${manifest}">
			<fileset dir="${build.classes}" />
		</jar>
	</target>

	<!-- ================================================= -->
	<!-- Create the distribution without source and docs   -->
	<!-- ================================================= -->
	<target name="dist-lite"
	        depends="jar"
	        description="Create the distribution directory and copy all
	                     files except source and javadocs.">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/lib"/>
		<copy todir="${dist.dir}/lib">
			<fileset dir="${build.lib}" />
		</copy>
		<copy file="README.txt" todir="${dist.dir}"/>
		<copy file="LICENSE.txt" todir="${dist.dir}"/>
	</target>

	<!-- ================================================= -->
	<!-- Create the API documentation                      -->
	<!-- ================================================= -->
	<target name="javadocs"
		description="Create the javadocs for this project.">
		<mkdir dir="${build.javadocs}"/>
		<javadoc packagenames="${packages}"
		         sourcepath="${basedir}/${src.dir}"
		         destdir="${build.javadocs}"
		         author="true"
		         version="true"
		         windowtitle="${name} API"
		         doctitle="${name}"
		         bottom="Copyright &#169; Minnesota Department of
		                 Transportation. All Rights Reserved.">
		</javadoc>
	</target>

	<!-- ================================================= -->
	<!-- Create the full distribution                      -->
	<!-- ================================================= -->
	<target name="dist"
	        depends="dist-lite, javadocs"
	        description="Create the distribution directory and copy all
	                     necessary files.">
		<copy todir="${dist.dir}/docs/api">
			<fileset dir="${build.javadocs}" />
		</copy>
		<copy todir="${dist.dir}/src">
			<fileset dir="${src.dir}" />
		</copy>
	</target>

	<!-- ================================================= -->
	<!-- Clean up generated stuff                          -->
	<!-- ================================================= -->
	<target name="clean"
		description="Delete the build and distribution directories.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>
</project>
